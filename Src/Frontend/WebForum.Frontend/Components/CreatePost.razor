@using WebForum.Frontend.HttpClients
@inject PostHttpClient PostHttpClient
@inject NavigationManager Navigation

<button class="@Class btn btn-primary"
        onclick="create_modal.showModal()">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"/>
    </svg>
    Create
</button>

<dialog id="create_modal"
        class="modal">
    <div class="modal-box max-w-[64rem]">
        <div class="flex flex-row gap-2">
            <textarea class="textarea textarea-bordered w-[30rem] h-96 resize-none overflow-hidden"
                @bind="_payload"
                @bind:event="oninput">
            @_payload
            </textarea>
            <div class="divider divider-horizontal"></div>
            <PostPayload Class="w-[30rem] h-96 overflow-hidden"
                         Content="@_payload"/>
        </div>
        <div class="mt-4 flex flex-row justify-between content-center">
            <form method="dialog">
                <button class="btn btn-primary" @onclick="OnCreateClick">Create</button>
            </form>
            <form method="dialog">
                <button class="btn btn-error" @onclick="OnCloseCLick">Close</button>
            </form>
        </div>
    </div>
    <form method="dialog" class="modal-backdrop">
        <button @onclick="OnCloseCLick">close</button>
    </form>
</dialog>

@code {
    [Parameter] public string Class { get; set; } = string.Empty;
    [Parameter] public Guid? ParentId { get; set; } = null;

    private string _payload = string.Empty;

    private void OnCloseCLick()
    {
        _payload = string.Empty;
    }
    
    private async Task OnCreateClick()
    {
        await PostHttpClient.Create(_payload, ParentId, default);
        _payload = string.Empty;
        
        var oldUri = Navigation.ToBaseRelativePath(Navigation.Uri);
        Navigation.NavigateTo("/");
        await Task.Delay(TimeSpan.FromMilliseconds(10));
        Navigation.NavigateTo(oldUri);
    }

}