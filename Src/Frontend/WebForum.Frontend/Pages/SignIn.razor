@page "/signin"
@using WebForum.Frontend.Services.Interfaces

@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="w-full h-screen flex flex-col justify-center items-center gap-2 pb-48">
    <h1 class="text-6xl font-bold text-primary my-8">Rubit</h1>
    <form class="flex flex-col justify-center items-center bg-primary-content rounded-box gap-3 p-3 w-96"
          @onsubmit="OnSubmit"
          @onsubmit:preventDefault="true"
          disabled="@_isLoading">
        <input class="input input-bordered w-full"
               type="text"
               placeholder="Login"
               @bind="_form.Login"/>
        <input class="input input-bordered w-full"
               type="password"
               placeholder="Password"
               @bind="_form.Password"/>
        <button class="btn btn-primary w-full"
                type="submit"
                disabled="@_isLoading">
            @if (!_isLoading)
            {
                <span>Sign in</span>
            }
            else
            {
                <span class="loading loading-spinner"></span>
                <span>loading</span>
            }
        </button>
    </form>
    <a class="link link-primary"
       @onclick="OnSignUpClick">
        sign up
    </a>
</div>

@code {
    private readonly SignInForm _form = new();
    private bool _isLoading = false;

    private async Task OnSubmit(EventArgs args)
    {
        _isLoading = true;
        var error = await AuthService.Login(_form.Login, _form.Password, default);
        _isLoading = false;
        if (error is not null)
        {
            _form.Password = string.Empty;
            return;
        }
        
        Navigation.NavigateTo("/");
    }

    private void OnSignUpClick()
    {
        Navigation.NavigateTo("/signup");
    }

    private class SignInForm
    {
        public string Login { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

}