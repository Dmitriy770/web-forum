@page "/signin"
@using Fluxor
@using WebForum.Frontend.States.AuthState
@using WebForum.Frontend.States.AuthState.Actions

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IState<AuthState> AuthState
@inject IDispatcher Dispatcher
@inject NavigationManager Navigation

<EditForm Model="@signInForm"
          OnValidSubmit="OnSubmit"
          class="mx-auto d-flex flex-column justify-center align-stretch"
          style="height: 90vh; width: 400px;">
    <MudCard>
        <MudCardContent>
            <MudTextField Label="Login"
                          Variant="Variant.Outlined"
                          @bind-Value="signInForm.Login"
                          Class="pb-4"/>
            <MudTextField Label="Password"
                          Variant="Variant.Outlined"
                          @bind-Value="signInForm.Password"
                          InputType="InputType.Password"
                          Class="pb-4"/>
            <MudText Color="Color.Error"
                     Style="min-height: 30px">
                @AuthState.Value.Error
            </MudText>
        </MudCardContent>
        <MudCardActions Class="d-flex flex-column align-stretch">
            <MudButton ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled"
                       Size="Size.Large"
                       Color="Color.Primary"
                       Disabled="AuthState.Value.IsLoading">
                @if (AuthState.Value.IsLoading)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                    <MudText Class="ms-2">Processing</MudText>
                }
                else
                {
                    <MudText>Sign In</MudText>
                }
            </MudButton>
        </MudCardActions>
    </MudCard>
    
    <MudLink OnClick="OnSignUpClick"
             Class="mt-8 align-self-center"
             >Sign up</MudLink>
</EditForm>

@code {
    private readonly SignInForm signInForm = new SignInForm();

    private void OnSubmit()
    {
        Dispatcher.Dispatch(new AuthLogInStartAction(signInForm.Login, signInForm.Password));

        StateHasChanged();
    }

    private void OnSignUpClick()
    {
        Navigation.NavigateTo("/signup");
    }
    
    private class SignInForm
    {
        public string Login { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}